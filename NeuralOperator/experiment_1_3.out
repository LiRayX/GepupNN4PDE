This experiment config:
0. dataset2, n_train = 100, n_test = 60
1. branch = mesh of t = 0s 
2. Output = mesh of t_end = 0.6s
3. Network: [*, 128, 128, *], the num of neuron middle layer is 128.


2024-08-07 16:20:35.541785: W tensorflow/c/c_api.cc:305] Operation '{name:'Variable_2/Adam_1/Assign' id:659 op device:{requested: '', assigned: ''} def:{{{node Variable_2/Adam_1/Assign}} = Assign[T=DT_FLOAT, _class=["loc:@Variable_2"], _has_manual_control_dependencies=true, use_locking=true, validate_shape=true](Variable_2/Adam_1, Variable_2/Adam_1/Initializer/zeros)}}' was changed by setting attribute after it was run by a session. This mutation will have no effect, and will trigger an error in the future. Either don't modify nodes after running them or create a new session.
2024-08-07 23:14:03.539853: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2024-08-07 23:14:03.948540: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2024-08-07 23:14:03.948599: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2024-08-07 23:14:04.038397: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-08-07 23:14:04.047488: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-08-07 23:14:14.348898: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
Using backend: tensorflow.compat.v1
Other supported backends: tensorflow, pytorch, jax, paddle.
paddle supports more examples now and is recommended.
WARNING:tensorflow:From /home/liruixiang/.conda/envs/deeponet/lib/python3.9/site-packages/tensorflow/python/compat/v2_compat.py:108: disable_resource_variables (from tensorflow.python.ops.variable_scope) is deprecated and will be removed in a future version.
Instructions for updating:
non-resource variables are not supported in the long term
Enable just-in-time compilation with XLA.

/home/liruixiang/.conda/envs/deeponet/lib/python3.9/site-packages/deepxde/nn/tensorflow_compat_v1/deeponet.py:549: UserWarning: `tf.layers.dense` is deprecated and will be removed in a future version. Please use `tf.keras.layers.Dense` instead.
  y_func = tf.layers.dense(
/home/liruixiang/.conda/envs/deeponet/lib/python3.9/site-packages/deepxde/nn/tensorflow_compat_v1/deeponet.py:556: UserWarning: `tf.layers.dense` is deprecated and will be removed in a future version. Please use `tf.keras.layers.Dense` instead.
  y_func = tf.layers.dense(
/home/liruixiang/.conda/envs/deeponet/lib/python3.9/site-packages/deepxde/nn/tensorflow_compat_v1/deeponet.py:570: UserWarning: `tf.layers.dense` is deprecated and will be removed in a future version. Please use `tf.keras.layers.Dense` instead.
  y_loc = tf.layers.dense(
Compiling model...
Building DeepONetCartesianProd...
'build' took 0.595981 s

2024-08-07 23:14:32.249109: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:47] Overriding orig_value setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.
2024-08-07 23:14:32.249602: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1929] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 22456 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 3090, pci bus id: 0000:02:00.0, compute capability: 8.6
'compile' took 3.501742 s

Compiling model...
Building DeepONetCartesianProd...
'build' took 0.591393 s

2024-08-07 23:14:34.544626: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1929] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 22456 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 3090, pci bus id: 0000:02:00.0, compute capability: 8.6
'compile' took 2.190261 s

2024-08-07 23:14:36.148850: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:388] MLIR V1 optimization pass is not enabled
2024-08-07 23:14:37.942004: I external/local_xla/xla/service/service.cc:168] XLA service 0x7fd5cc0093b0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2024-08-07 23:14:37.942065: I external/local_xla/xla/service/service.cc:176]   StreamExecutor device (0): NVIDIA GeForce RTX 3090, Compute Capability 8.6
2024-08-07 23:14:37.949026: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:269] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2024-08-07 23:14:38.641130: I external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:454] Loaded cuDNN version 8902
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1723043682.644801  224458 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.
Training model...

Step      Train loss    Test loss     Test metric   
0         [6.81e-01]    [7.00e-01]    [1.01e+00]    
1000      [7.25e-02]    [7.66e-02]    [3.82e-01]    
2000      [5.41e-02]    [5.78e-02]    [3.47e-01]    
3000      [4.99e-02]    [5.35e-02]    [3.39e-01]    
4000      [4.88e-02]    [5.24e-02]    [3.34e-01]    
5000      [4.83e-02]    [5.18e-02]    [3.29e-01]    
6000      [4.99e-02]    [5.34e-02]    [3.34e-01]    
7000      [4.48e-02]    [4.81e-02]    [3.15e-01]    
8000      [4.21e-02]    [4.49e-02]    [3.01e-01]    
9000      [3.80e-02]    [4.02e-02]    [2.87e-01]    
10000     [3.57e-02]    [3.75e-02]    [2.80e-01]    
11000     [3.19e-02]    [3.36e-02]    [2.69e-01]    
12000     [2.82e-02]    [2.98e-02]    [2.58e-01]    
13000     [2.61e-02]    [2.78e-02]    [2.51e-01]    
14000     [2.35e-02]    [2.53e-02]    [2.42e-01]    
15000     [2.19e-02]    [2.38e-02]    [2.35e-01]    
16000     [2.05e-02]    [2.25e-02]    [2.29e-01]    
17000     [1.96e-02]    [2.16e-02]    [2.24e-01]    
18000     [1.89e-02]    [2.08e-02]    [2.20e-01]    
19000     [1.87e-02]    [2.06e-02]    [2.18e-01]    
20000     [1.81e-02]    [1.99e-02]    [2.14e-01]    
21000     [1.75e-02]    [1.92e-02]    [2.11e-01]    
22000     [1.66e-02]    [1.82e-02]    [2.06e-01]    
23000     [1.68e-02]    [1.82e-02]    [2.06e-01]    
24000     [1.58e-02]    [1.72e-02]    [2.00e-01]    
25000     [1.59e-02]    [1.71e-02]    [1.99e-01]    
26000     [1.51e-02]    [1.63e-02]    [1.94e-01]    
27000     [1.49e-02]    [1.59e-02]    [1.90e-01]    
28000     [1.45e-02]    [1.54e-02]    [1.88e-01]    
29000     [1.46e-02]    [1.54e-02]    [1.87e-01]    
30000     [1.39e-02]    [1.46e-02]    [1.82e-01]    
31000     [1.36e-02]    [1.43e-02]    [1.80e-01]    
32000     [1.33e-02]    [1.39e-02]    [1.77e-01]    
33000     [1.30e-02]    [1.35e-02]    [1.74e-01]    
34000     [1.31e-02]    [1.35e-02]    [1.73e-01]    
35000     [1.33e-02]    [1.37e-02]    [1.73e-01]    
36000     [1.24e-02]    [1.26e-02]    [1.67e-01]    
37000     [1.22e-02]    [1.24e-02]    [1.65e-01]    
38000     [1.18e-02]    [1.20e-02]    [1.63e-01]    
39000     [1.17e-02]    [1.19e-02]    [1.61e-01]    
40000     [1.17e-02]    [1.19e-02]    [1.61e-01]    
41000     [1.15e-02]    [1.17e-02]    [1.59e-01]    
42000     [1.10e-02]    [1.12e-02]    [1.56e-01]    
43000     [1.08e-02]    [1.10e-02]    [1.55e-01]    
44000     [1.08e-02]    [1.09e-02]    [1.54e-01]    
45000     [1.07e-02]    [1.08e-02]    [1.53e-01]    
46000     [1.04e-02]    [1.05e-02]    [1.51e-01]    
47000     [1.03e-02]    [1.05e-02]    [1.51e-01]    
48000     [1.00e-02]    [1.02e-02]    [1.49e-01]    
49000     [9.98e-03]    [1.01e-02]    [1.48e-01]    
50000     [9.94e-03]    [1.01e-02]    [1.47e-01]    

Best model at step 50000:
  train loss: 9.94e-03
  test loss: 1.01e-02
  test metric: [1.47e-01]

'train' took 2804.298715 s

Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.
Training model...

Step      Train loss    Test loss     Test metric   
0         [4.75e-01]    [4.86e-01]    [1.61e+00]    
1000      [5.55e-02]    [5.74e-02]    [6.63e-01]    
2000      [4.54e-02]    [4.74e-02]    [6.21e-01]    
3000      [3.14e-02]    [3.32e-02]    [5.52e-01]    
4000      [2.83e-02]    [3.00e-02]    [5.40e-01]    
5000      [2.42e-02]    [2.58e-02]    [5.15e-01]    
6000      [2.34e-02]    [2.50e-02]    [5.06e-01]    
7000      [2.34e-02]    [2.49e-02]    [5.02e-01]    
8000      [2.17e-02]    [2.31e-02]    [4.84e-01]    
9000      [2.01e-02]    [2.14e-02]    [4.67e-01]    
10000     [1.91e-02]    [2.03e-02]    [4.52e-01]    
11000     [1.76e-02]    [1.87e-02]    [4.36e-01]    
12000     [1.66e-02]    [1.76e-02]    [4.21e-01]    
13000     [1.57e-02]    [1.66e-02]    [4.07e-01]    
14000     [1.47e-02]    [1.56e-02]    [3.96e-01]    
15000     [1.39e-02]    [1.48e-02]    [3.86e-01]    
16000     [1.34e-02]    [1.42e-02]    [3.77e-01]    
17000     [1.29e-02]    [1.37e-02]    [3.70e-01]    
18000     [1.24e-02]    [1.32e-02]    [3.61e-01]    
19000     [1.20e-02]    [1.28e-02]    [3.52e-01]    
20000     [1.15e-02]    [1.23e-02]    [3.45e-01]    
21000     [1.12e-02]    [1.20e-02]    [3.40e-01]    
22000     [1.12e-02]    [1.20e-02]    [3.40e-01]    
23000     [1.05e-02]    [1.12e-02]    [3.29e-01]    
24000     [1.03e-02]    [1.10e-02]    [3.25e-01]    
25000     [1.02e-02]    [1.08e-02]    [3.20e-01]    
26000     [9.86e-03]    [1.05e-02]    [3.14e-01]    
27000     [9.61e-03]    [1.02e-02]    [3.09e-01]    
28000     [9.45e-03]    [9.99e-03]    [3.06e-01]    
29000     [9.39e-03]    [9.91e-03]    [3.03e-01]    
30000     [9.08e-03]    [9.58e-03]    [2.98e-01]    
31000     [8.95e-03]    [9.43e-03]    [2.95e-01]    
32000     [9.18e-03]    [9.64e-03]    [2.96e-01]    
33000     [8.62e-03]    [9.06e-03]    [2.90e-01]    
34000     [8.73e-03]    [9.16e-03]    [2.89e-01]    
35000     [8.37e-03]    [8.77e-03]    [2.84e-01]    
36000     [8.57e-03]    [8.96e-03]    [2.84e-01]    
37000     [8.24e-03]    [8.61e-03]    [2.80e-01]    
38000     [8.01e-03]    [8.37e-03]    [2.77e-01]    
39000     [8.05e-03]    [8.40e-03]    [2.76e-01]    
40000     [7.95e-03]    [8.28e-03]    [2.73e-01]    
41000     [7.80e-03]    [8.11e-03]    [2.71e-01]    
42000     [7.65e-03]    [7.95e-03]    [2.69e-01]    
43000     [7.43e-03]    [7.73e-03]    [2.69e-01]    
44000     [7.43e-03]    [7.71e-03]    [2.68e-01]    
45000     [7.26e-03]    [7.51e-03]    [2.65e-01]    
46000     [7.17e-03]    [7.42e-03]    [2.63e-01]    
47000     [7.06e-03]    [7.30e-03]    [2.61e-01]    
48000     [7.04e-03]    [7.26e-03]    [2.61e-01]    
49000     [6.97e-03]    [7.18e-03]    [2.59e-01]    
50000     [6.87e-03]    [7.07e-03]    [2.58e-01]    

Best model at step 50000:
  train loss: 6.87e-03
  test loss: 7.07e-03
  test metric: [2.58e-01]

'train' took 2808.608423 s

2024-08-08 00:48:09.047682: W tensorflow/c/c_api.cc:305] Operation '{name:'Variable_2/Adam_1/Assign' id:659 op device:{requested: '', assigned: ''} def:{{{node Variable_2/Adam_1/Assign}} = Assign[T=DT_FLOAT, _class=["loc:@Variable_2"], _has_manual_control_dependencies=true, use_locking=true, validate_shape=true](Variable_2/Adam_1, Variable_2/Adam_1/Initializer/zeros)}}' was changed by setting attribute after it was run by a session. This mutation will have no effect, and will trigger an error in the future. Either don't modify nodes after running them or create a new session.
